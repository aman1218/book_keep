{"ast":null,"code":"var _jsxFileName = \"/home/sauron/Desktop/book_keep/frontend_app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate, useNavigate } from 'react-router-dom';\nimport Login from './Login';\nimport Registration from './Registration';\nimport Dashboard from './Dashboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst navigate = useNavigate();\nfunction App() {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  useEffect(() => {\n    if (isAuthenticated) {\n      navigate('/dashboard', {\n        replace: true\n      });\n    } else {\n      navigate('/login', {\n        replace: true\n      });\n    }\n  }, [isAuthenticated, navigate]);\n\n  // Function to handle login success\n  const handleLoginSuccess = () => {\n    setIsAuthenticated(true);\n    // Assuming navigate is used within Login component to redirect after setting isAuthenticated\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('jwt'); // Remove the token from storage\n    setIsAuthenticated(false); // Update authentication state\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          replace: true,\n          to: isAuthenticated ? \"/dashboard\" : \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {\n          onLogin: handleLoginSuccess\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        element: /*#__PURE__*/_jsxDEV(Registration, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/dashboard\",\n        element: isAuthenticated ? /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 61\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          replace: true,\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 77\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"JkS3Meyzlj18m4l86SBr9YDqEkQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Navigate","useNavigate","Login","Registration","Dashboard","jsxDEV","_jsxDEV","navigate","App","_s","isAuthenticated","setIsAuthenticated","replace","handleLoginSuccess","handleLogout","localStorage","removeItem","children","path","element","to","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","_c","$RefreshReg$"],"sources":["/home/sauron/Desktop/book_keep/frontend_app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate, useNavigate } from 'react-router-dom';\nimport Login from './Login';\nimport Registration from './Registration';\nimport Dashboard from './Dashboard';\n\nconst navigate = useNavigate();\n\nfunction App() {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  \n  useEffect(() => {\n    if (isAuthenticated) {\n        navigate('/dashboard', { replace: true });\n    } else {\n        navigate('/login', { replace: true });\n    }\n}, [isAuthenticated, navigate]);\n\n  // Function to handle login success\n  const handleLoginSuccess = () => {\n    setIsAuthenticated(true);\n    // Assuming navigate is used within Login component to redirect after setting isAuthenticated\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem('jwt');  // Remove the token from storage\n    setIsAuthenticated(false);  // Update authentication state\n  };\n\n  return (\n    <Router>\n      <Routes>\n        {/* Redirect base route depending on authentication status */}\n        <Route path=\"/\" element={<Navigate replace to={isAuthenticated ? \"/dashboard\" : \"/login\"} />} />\n        \n        {/* Login route */}\n        <Route path=\"/login\" element={<Login onLogin={handleLoginSuccess} />} />\n        \n        {/* Registration route */}\n        <Route path=\"/register\" element={<Registration />} />\n        \n        {/* Dashboard route */}\n        <Route path=\"/dashboard\" element={isAuthenticated ? <Dashboard /> : <Navigate replace to=\"/login\" />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AAChG,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;AAE9B,SAASO,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAE7DC,SAAS,CAAC,MAAM;IACd,IAAIe,eAAe,EAAE;MACjBH,QAAQ,CAAC,YAAY,EAAE;QAAEK,OAAO,EAAE;MAAK,CAAC,CAAC;IAC7C,CAAC,MAAM;MACHL,QAAQ,CAAC,QAAQ,EAAE;QAAEK,OAAO,EAAE;MAAK,CAAC,CAAC;IACzC;EACJ,CAAC,EAAE,CAACF,eAAe,EAAEH,QAAQ,CAAC,CAAC;;EAE7B;EACA,MAAMM,kBAAkB,GAAGA,CAAA,KAAM;IAC/BF,kBAAkB,CAAC,IAAI,CAAC;IACxB;EACF,CAAC;EAED,MAAMG,YAAY,GAAGA,CAAA,KAAM;IACzBC,YAAY,CAACC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAE;IACjCL,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAE;EAC9B,CAAC;EAED,oBACEL,OAAA,CAACT,MAAM;IAAAoB,QAAA,eACLX,OAAA,CAACR,MAAM;MAAAmB,QAAA,gBAELX,OAAA,CAACP,KAAK;QAACmB,IAAI,EAAC,GAAG;QAACC,OAAO,eAAEb,OAAA,CAACN,QAAQ;UAACY,OAAO;UAACQ,EAAE,EAAEV,eAAe,GAAG,YAAY,GAAG;QAAS;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAGhGlB,OAAA,CAACP,KAAK;QAACmB,IAAI,EAAC,QAAQ;QAACC,OAAO,eAAEb,OAAA,CAACJ,KAAK;UAACuB,OAAO,EAAEZ;QAAmB;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAGxElB,OAAA,CAACP,KAAK;QAACmB,IAAI,EAAC,WAAW;QAACC,OAAO,eAAEb,OAAA,CAACH,YAAY;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAGrDlB,OAAA,CAACP,KAAK;QAACmB,IAAI,EAAC,YAAY;QAACC,OAAO,EAAET,eAAe,gBAAGJ,OAAA,CAACF,SAAS;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAAGlB,OAAA,CAACN,QAAQ;UAACY,OAAO;UAACQ,EAAE,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb;AAACf,EAAA,CAvCQD,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AAyCZ,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}