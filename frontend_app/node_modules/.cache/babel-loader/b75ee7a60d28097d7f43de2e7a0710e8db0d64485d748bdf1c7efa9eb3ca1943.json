{"ast":null,"code":"var _jsxFileName = \"/home/sauron/Desktop/book_keep/frontend_app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate, useNavigate } from 'react-router-dom';\nimport Login from './Login';\nimport Registration from './Registration';\nimport Dashboard from './Dashboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  useEffect(() => {\n    // Check for token in local storage\n    const token = localStorage.getItem('jwt');\n    if (token) {\n      // Here you might want to validate the token or ensure it's still valid\n      setIsAuthenticated(true);\n    }\n  }, []);\n\n  // Function to handle login success\n  const handleLoginSuccess = () => {\n    setIsAuthenticated(true);\n    // Assuming navigate is used within Login component to redirect after setting isAuthenticated\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          replace: true,\n          to: isAuthenticated ? \"/dashboard\" : \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {\n          onLogin: handleLoginSuccess\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        element: /*#__PURE__*/_jsxDEV(Registration, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/dashboard\",\n        element: isAuthenticated ? /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 61\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          replace: true,\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 77\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"JkS3Meyzlj18m4l86SBr9YDqEkQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Routes","Route","Navigate","useNavigate","Login","Registration","Dashboard","jsxDEV","_jsxDEV","App","_s","isAuthenticated","setIsAuthenticated","useEffect","token","localStorage","getItem","handleLoginSuccess","children","path","element","replace","to","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","_c","$RefreshReg$"],"sources":["/home/sauron/Desktop/book_keep/frontend_app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate, useNavigate } from 'react-router-dom';\nimport Login from './Login';\nimport Registration from './Registration';\nimport Dashboard from './Dashboard';\n\nfunction App() {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  useEffect(() => {\n    // Check for token in local storage\n    const token = localStorage.getItem('jwt');\n    if (token) {\n      // Here you might want to validate the token or ensure it's still valid\n      setIsAuthenticated(true);\n    }\n  }, []);\n\n  // Function to handle login success\n  const handleLoginSuccess = () => {\n    setIsAuthenticated(true);\n    // Assuming navigate is used within Login component to redirect after setting isAuthenticated\n  };\n  \n\n  return (\n    <Router>\n      <Routes>\n        {/* Redirect base route depending on authentication status */}\n        <Route path=\"/\" element={<Navigate replace to={isAuthenticated ? \"/dashboard\" : \"/login\"} />} />\n        \n        {/* Login route */}\n        <Route path=\"/login\" element={<Login onLogin={handleLoginSuccess} />} />\n        \n        {/* Registration route */}\n        <Route path=\"/register\" element={<Registration />} />\n        \n        {/* Dashboard route */}\n        <Route path=\"/dashboard\" element={isAuthenticated ? <Dashboard /> : <Navigate replace to=\"/login\" />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AAChG,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAE7DgB,SAAS,CAAC,MAAM;IACd;IACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC;IACzC,IAAIF,KAAK,EAAE;MACT;MACAF,kBAAkB,CAAC,IAAI,CAAC;IAC1B;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMK,kBAAkB,GAAGA,CAAA,KAAM;IAC/BL,kBAAkB,CAAC,IAAI,CAAC;IACxB;EACF,CAAC;EAGD,oBACEJ,OAAA,CAACT,MAAM;IAAAmB,QAAA,eACLV,OAAA,CAACR,MAAM;MAAAkB,QAAA,gBAELV,OAAA,CAACP,KAAK;QAACkB,IAAI,EAAC,GAAG;QAACC,OAAO,eAAEZ,OAAA,CAACN,QAAQ;UAACmB,OAAO;UAACC,EAAE,EAAEX,eAAe,GAAG,YAAY,GAAG;QAAS;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAGhGlB,OAAA,CAACP,KAAK;QAACkB,IAAI,EAAC,QAAQ;QAACC,OAAO,eAAEZ,OAAA,CAACJ,KAAK;UAACuB,OAAO,EAAEV;QAAmB;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAGxElB,OAAA,CAACP,KAAK;QAACkB,IAAI,EAAC,WAAW;QAACC,OAAO,eAAEZ,OAAA,CAACH,YAAY;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAGrDlB,OAAA,CAACP,KAAK;QAACkB,IAAI,EAAC,YAAY;QAACC,OAAO,EAAET,eAAe,gBAAGH,OAAA,CAACF,SAAS;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAAGlB,OAAA,CAACN,QAAQ;UAACmB,OAAO;UAACC,EAAE,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb;AAAChB,EAAA,CApCQD,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AAsCZ,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}